generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["interactiveTransactions"]
}

generator docs {
    provider = "node node_modules/prisma-docs-generator"
    output   = "../docs/schema"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Session {
    id        String   @id
    sid       String   @unique
    data      String
    expiresAt DateTime
}

model User {
    id           String        @id @default(uuid())
    email        String        @unique
    password     String
    type         USERTYPE
    student      Student?
    coordination Coordination?
}

model Student {
    user     User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    userId   String    @id
    isAdmin  Boolean   @default(false)
    subjects Subject[]
}

model Coordination {
    user    User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    userId  String  @id
    isAdmin Boolean @default(true)
    posts   Post[]
}

enum USERTYPE {
    STUDENT
    COORDINATION
}

model Building {
    name      String @id
    latitude  Float
    longitude Float
    rooms     Room[]
}

model Room {
    identification String    @id
    level          Int
    latitude       Float
    longitude      Float
    subjects       Subject[]
    building       Building? @relation(fields: [buildingname], references: [name])
    buildingname   String?
}

model Subject {
    codeId  String    @id
    time    Int
    teacher String
    class   Int
    room    Room?     @relation(fields: [roomID], references: [identification])
    roomID  String?
    Student Student[]

    @@unique([time, teacher])
}

model Post {
    title        String        @id
    text         String
    data         DateTime      @default(now())
    coordination Coordination? @relation(fields: [userId], references: [userId])
    userId       String?
}
